@model Events.Web.Models.EventDetailsViewModel

<div style="height:85px"></div>
<div style="width: 47%; margin: 0 auto;">
    @Html.Label(@Model.Title, new { id = "Title" })

    @if (Model != null && Model.Description != null)
    {
        <p class="description" style="width:450px;"><span>Description: @Model.Description</span></p>
    }

    @if (Model != null && Model.Comments != null && Model.Comments.Any())
    {
        @:Comments:
        <ul>
            @foreach (var comment in Model.Comments)
            {
                <li>
                    @comment.Text
                    @if (@comment.Author != null)
                    {
                        @: (by @comment.Author)
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments</p>
    }

    @Html.HiddenFor(model => model.Latitude)
    @Html.HiddenFor(model => model.Longitude)

    <!--google maps niraj-->
    <style>
        #googleMap {
            width: 550px; /* Span the entire width of the screen */
            height: 400px; /* Set the height to 400 pixels */
            -webkit-filter: grayscale(1%);
            filter: grayscale(1%); /* Change the color of the map to black and white */
        }
    </style>

    <div id="googleMap"></div>
</div>

<!-- Add Google Maps -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script>
    var lat = $("#Latitude").val();
    var lon = $("#Longitude").val();
    var myCenter = new google.maps.LatLng(lat, lon);

    function initialize() {
        var mapProp = {
            center: myCenter,
            zoom: 12,
            scrollwheel: false,
            draggable: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

        var marker = new google.maps.Marker({
            position: myCenter,
        });

        marker.setMap(map);
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>

@if (ViewBag.CanEdit)
{
    @Html.ActionLink("Edit", "Edit", "Events", new { id = Model.Id }, new { @class = "btn btn-default" })
    <span></span>
    @Html.ActionLink("Delete", "Delete", "Events", new { id = Model.Id }, new { @class = "btn btn-default" })
}
